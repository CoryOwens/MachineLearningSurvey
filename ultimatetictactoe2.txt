enum Player
	ONE, TWO
GameState
	Field field
	MacroBoard macroBoard
	int round
	int move
	Player activePlayer
	boolean gameOver
	Player winner
	Set<GameState> prev
	Set<GameState> next
	Set<GameState> guaranteedNoloss
	Set<GameState> guaranteedWin
	Set<Player> losable 
	Set<Player> winable
	==
	Set<Move> getValidMoves()
	GameState makeMove(Move)
	boolean isGameOver()
	boolean canPlayerLose(Player)
	boolean canPlayerWin(Player)
	void cannotLose(Player)
	void cannotWin(Player)
Move
	int x
	int y
GameStateTree
	GameState start
	Set<GameState> allNodes = new Set<>();
	Set<GameState> leaves = new Set<>();
	==
	void populate()

GameStateTree.populate pseudoJava
	Queue<GameState> todo = new Queue<>();
	allNodes.add(start);
	todo.enqueue(start);
	while(todo.isEmpty() == false){
		GameState cur = todo.dequeue();
		if (cur.isGameOver()){
			leaves.add(cur);
		} else {
			Set<Move> moves = cur.getValidMoves();
			for(Move m : moves){
				GameState nextState = cur.makeMove(m);
				GSTNode nextNode = new GSTNode(nextState);
				if (allNodes.contains(nextNode)){
					nextNode = allNodes.remove(nextNode);
				}
				nextNode.prev.add(cur);
				cur.next.add(nextNode);
				allNodes.add(nextNode);
				todo.enqueue(nextNode);
			}
		}
	}
